//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-520 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.19 at 04:23:50 PM CET 
//


package com.reportingtool.xml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ReportingPeriodTypeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ReportingPeriodTypeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Q1"/>
 *     &lt;enumeration value="Q2"/>
 *     &lt;enumeration value="Q3"/>
 *     &lt;enumeration value="Q4"/>
 *     &lt;enumeration value="H1"/>
 *     &lt;enumeration value="H2"/>
 *     &lt;enumeration value="Y1"/>
 *     &lt;enumeration value="X1"/>
 *     &lt;enumeration value="X2"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ReportingPeriodTypeType")
@XmlEnum
public enum ReportingPeriodTypeType {

    @XmlEnumValue("Q1")
    Q_1("Q1"),
    @XmlEnumValue("Q2")
    Q_2("Q2"),
    @XmlEnumValue("Q3")
    Q_3("Q3"),
    @XmlEnumValue("Q4")
    Q_4("Q4"),
    @XmlEnumValue("H1")
    H_1("H1"),
    @XmlEnumValue("H2")
    H_2("H2"),
    @XmlEnumValue("Y1")
    Y_1("Y1"),
    @XmlEnumValue("X1")
    X_1("X1"),
    @XmlEnumValue("X2")
    X_2("X2");
    private final String value;

    ReportingPeriodTypeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ReportingPeriodTypeType fromValue(String v) {
        for (ReportingPeriodTypeType c: ReportingPeriodTypeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
