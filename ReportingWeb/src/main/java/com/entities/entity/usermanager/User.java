package com.entities.entity.usermanager;

// Generated 11-feb-2015 16:49:54 by Hibernate Tools 4.0.0

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import com.entities.utilities.hibernate.VersionAuditor;
import com.entities.utilities.hibernate.VersionableAdapter;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "T_USER")
public class User implements VersionableAdapter {

	private long id;
	private UserRol userRol;
	private String userName;
	private String userPass;
	private String userMail;
	private Date lastLoginTms;

	@Embedded
	private VersionAuditor versionAuditor;
	@Version
	@Column(name = "VERSION", nullable = false)
	int version;

	public User() {
	}

	public User(long userId, UserRol userRol, String userName, String userPass,
			VersionAuditor versionAuditor) {
		this.id = userId;
		this.userRol = userRol;
		this.userName = userName;
		this.userPass = userPass;
		this.versionAuditor = versionAuditor;
	}

	public User(UserRol userRol, String userName, String userPass,
			String userMail, Date lastLoginTms, VersionAuditor versionAuditor) {
		this.userRol = userRol;
		this.userName = userName;
		this.userPass = userPass;
		this.userMail = userMail;
		this.lastLoginTms = lastLoginTms;
		this.versionAuditor = versionAuditor;
	}

	@Id
	@SequenceGenerator(name = "GEN_USER", sequenceName = "SEQ_USER", initialValue = 1, allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "GEN_USER")
	@Column(name = "USER_ID", unique = true, nullable = false, length = 40)
	public long getId() {
		return this.id;
	}

	public void setId(long userId) {
		this.id = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ROL_ID", nullable = false)
	public UserRol getUserRol() {
		return this.userRol;
	}

	public void setUserRol(UserRol userRol) {
		this.userRol = userRol;
	}

	@Column(name = "USER_NAME", nullable = false, length = 40)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "USER_PASS", nullable = false, length = 128)
	public String getUserPass() {
		return this.userPass;
	}

	public void setUserPass(String userPass) {
		this.userPass = userPass;
	}

	@Column(name = "USER_MAIL")
	public String getUserMail() {
		return this.userMail;
	}

	public void setUserMail(String userMail) {
		this.userMail = userMail;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "LAST_LOGIN_TMS", length = 7)
	public Date getLastLoginTms() {
		return this.lastLoginTms;
	}

	public void setLastLoginTms(Date lastLoginTms) {
		this.lastLoginTms = lastLoginTms;
	}

	public int getVersion() {
		return version;
	}

	public void setVersion(int version) {
		this.version = version;
	}

	@Override
	public Object clone() throws CloneNotSupportedException {
		return super.clone();
	}

	public VersionAuditor getAuditor() {
		return versionAuditor;
	}

	public void setAuditor(VersionAuditor _auditor) {
		this.versionAuditor = _auditor;
	}

}
